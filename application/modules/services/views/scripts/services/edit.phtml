<h2 class="sub-header">
    <?php if ($this->service): ?>
        <?php if ($this->request['typeid'] == $this->types->find('installation', 'acronym')->id): ?>
            Instalacja
        <?php elseif ($this->request['typeid'] == $this->types->find('service', 'acronym')->id): ?>
            Serwis
        <?php endif; ?>
        - <?php echo $this->service->client; ?>
    <?php else: ?>
        Nowe zlecenie
    <?php endif ?>
</h2>

<?php if ($this->success): ?>
    <div class="alert alert-success"><?php echo $this->success; ?></div> 
    <button type="button" class="btn btn-success">Powr√≥t</button>
<?php else: ?> 

    <?php if ($this->form->getDescription()): ?>
        <div class="alert alert-danger"><?php echo $this->form->getDescription(); ?></div>
    <?php endif; ?>

    <?php
    $this->form->setAction($this->url());
    echo $this->form;
    ;
    ?>

<?php endif; ?> 

<script>
    $(function() {
        //$('#installationcodeid').hide();
        $('.chosen-select').not('[name^=installationcodeid]').not('[multiple=multiple][name^=productreturnedid]').not('[multiple=multiple][name^=productid]').chosen({
            search_contains: true,
            allow_single_deselect: true,
            placeholder_text_multiple: 'dodaj'
        });
        $('.chosen-select[name^=installationcodeid]').chosen({
            search_contains: true,
            allow_single_deselect: true,
            multiple: false,
            placeholder_text_multiple: 'dodaj',
            max_selected_options: 1
        }).change(function(e) {

        });
        onInstallationCodeChange();
        function onInstallationCodeChange() {
            //$(".chosen-select[name^=installationcodeid]").off();
            $(".chosen-select[name^=installationcodeid]").on("change", function(e) {
                if (!e.currentTarget.value) {
                    if ($(".chosen-select[name^=installationcodeid]").size() == 1) {
                        return false;
                    }
                    $(e.currentTarget).next('.chosen-container').remove();
                } else {
                    div = $('[name="installationcodeid[installationcodeid-0][]"]').parents('.form-group.inline').clone();
                    if (div.size()) {
                        length = $('.chosen-select[name^="installationcodeid"]').length;
                        div.find('.chosen-container').remove();
                        div.find('select').show();
                        div.find('select').val([]);
                        div.find('select').attr('name', 'installationcodeid[installationcodeid-' + length + '][]');
                        div.find('select').attr('id', 'installationcodeid-installationcodeid-' + length + '');
                        $(div).insertAfter($($(e.currentTarget).parents('.form-group.inline').last()));
                        $('.chosen-select[name^="installationcodeid[installationcodeid-' + length + ']"]').chosen({
                            search_contains: true,
                            allow_single_deselect: true,
                            multiple: false,
                            placeholder_text_multiple: 'dodaj',
                            max_selected_options: 1
                        });
                        onInstallationCodeChange();
                    }
                }
            });
        }
        ;
        $('.chosen-select[multiple=multiple][name^=productreturnedid]').chosen({
            search_contains: true,
            allow_single_deselect: true,
            multiple: false,
            placeholder_text_multiple: 'dodaj',
            max_selected_options: 1,
            display_disabled_options: false
        });
        onProductReturnedChange();
        function onProductReturnedChange() {
            //$(".chosen-select[name^=productreturnedid]").off();
            $(".chosen-select[name^=productreturnedid]").on("change", function(e) {
                if (!e.currentTarget.value) {
                    if ($(".chosen-select[name^=productreturnedid]").size() == 1) {
                        return false;
                    }
                    $(e.currentTarget).parents('div.form-group').remove();
                    /*selectedValues = $('.chosen-select[multiple=multiple][name^=productreturnedid]').map(function(i,n){return $(n).val();}).toArray();
                    $('.chosen-select[multiple=multiple][name^=productreturnedid]').each(function(k,v) {
                        $(v).find('option:disabled').each(function(i,n) {
                            if (selectedValues.indexOf($(n).val()) == -1) {console.log(n);
                                $(n).removeAttr('disabled');
                                $(v).trigger("chosen:updated");
                            }
                        });
                    });*/
                } else {
                    div = $(e.currentTarget).parents('div.form-group').clone();
                    if (div.size()) {
                        tmp = $('.chosen-select[name^="productreturnedid"]').last().attr('name').match(/\d+/);
                        length = parseInt(tmp[0]) + 1;
                        div.find('.chosen-container').remove();
                        div.find('select').show();
                        div.find('select').val([]);
                        div.find('select[name^=catalogid]').attr('name', 'catalogid[catalogid-' + length + ']');
                        div.find('select[name^=catalogid]').attr('id', 'catalogid-catalogid-' + length + '');
                        div.find('select[name^=productreturnedid]').attr('name', 'productreturnedid[productreturnedid-' + length + '][]');
                        div.find('select[name^=productreturnedid]').attr('id', 'productreturnedid-productreturnedid-' + length + '');
                        div.find('select[name^=demagecodeid]').attr('name', 'demagecodeid[demagecodeid-' + length + ']');
                        div.find('select[name^=demagecodeid]').attr('id', 'demagecodeid-demagecodeid-' + length + '');
                        div.find('input').attr('name', 'demaged[demaged-' + length + ']');
                        div.find('input').attr('id', 'demaged-demaged-' + length + '');
                        div.attr('id', 'demaged-' + length + '-label');
                        div.find('label').attr('for', 'demaged-demaged-' + length + '');
                        div.find('select[name^=demagecodeid]').parents('span').show();
                        div.find('select[name^=demagecodeid]').parents('span').prev('span').show();
                        $(div).insertAfter($(e.currentTarget).parents('div.form-group'));
                        $('.chosen-select[name^="productreturnedid[productreturnedid-' + length + ']"]').chosen({
                            search_contains: true,
                            allow_single_deselect: true,
                            multiple: false,
                            placeholder_text_multiple: 'dodaj',
                            max_selected_options: 1,
                            display_disabled_options: false
                        });
                        $('.chosen-select[name^="demagecodeid[demagecodeid-' + length + ']"]').chosen({
                            search_contains: true,
                            allow_single_deselect: true,
                            multiple: false,
                            placeholder_text_multiple: 'wybierz',
                            max_selected_options: 1
                        });
                        $('.chosen-select[name^="catalogid[catalogid-' + length + ']"]').chosen({
                            search_contains: true,
                            allow_single_deselect: true,
                            multiple: false,
                            placeholder_text_multiple: 'wybierz',
                            max_selected_options: 1
                        });
                        onProductReturnedChange();
                    }
                    //var selectedValue = $(this).find('option:selected').text();
                    //$('.chosen-select[multiple=multiple][name^=productreturnedid]').not('[name="' + $(this).attr('name') + '"]').parents('.form-group.inline').find('option:contains("' + selectedValue + '")').attr('disabled','disabled');
                    //$('.chosen-select[multiple=multiple][name^=productreturnedid]').not('[name="' + $(this).attr('name') + '"]').trigger("chosen:updated");
                }
            });
            setTimeout(function () {
                $('.chosen-select[multiple=multiple][name^=productreturnedid]').next('.chosen-container').on('mousedown keydown', function(event) {
                    products = $('.chosen-select[multiple=multiple][name^=productreturnedid]').not('[name="' + $(this).attr('name') + '"]').map(function(i, n) {
                        return $(n).find('option:selected').val();
                    }).toArray();
                    select = $(this).parents('div.form-group').find('select[name^=productreturnedid]');
                    select.find('option').each(function(i, n) {
                        if (products.indexOf($(n).val()) === -1)
                            $(n).removeAttr('disabled');
                        else 
                            $(n).attr('disabled', 'disabled');
                    });
                    $(select).trigger("chosen:updated");
                });
            }, 1000);
        };
        $('select[disabled=disabled]').each(function(i, e) {
            $($(e).parents('dd')).append($('<input type="hidden" name="' + e.name + '" value="' + e.value + '">'));
        });
        $('.chosen-select[multiple=multiple][name^=productid]').chosen({
            search_contains: true,
            allow_single_deselect: true,
            multiple: false,
            placeholder_text_multiple: 'dodaj',
            max_selected_options: 1,
            display_disabled_options: false
        });
        onProductChange();
        function onProductChange() {
            //$(".chosen-select[name^=productid]").off();
            $(".chosen-select[name^=productid]").on("change", function(e) {
                if (!e.currentTarget.value) {
                    if ($(".chosen-select[name^=productid]").size() == 1) {
                        return false;
                    }
                    $(e.currentTarget).parents('div.form-group').remove();
                    /*selectedValues = $('.chosen-select[multiple=multiple][name^=productid]').map(function(i,n){return $(n).val();}).toArray();
                    $('.chosen-select[multiple=multiple][name^=productid]').each(function(k,v) {
                        $(v).find('option:disabled').each(function(i,n) {
                            if (selectedValues.indexOf($(n).val()) == -1) {
                                $(n).removeAttr('disabled');
                                $(v).trigger("chosen:updated");
                            }
                        });
                    });*/
                } else {
                    div = $(e.currentTarget).parents('div.form-group').clone();
                    if (div.size()) {
                        tmp = $('.chosen-select[name^="productid"]').last().attr('name').match(/\d+/);
                        length = parseInt(tmp[0]) + 1;
                        div.find('.chosen-container').remove();
                        div.find('select').show();
                        div.find('select').val([]);
                        div.find('select[name^=productwarehouseid]').attr('name', 'productwarehouseid[productwarehouseid-' + length + '][]');
                        div.find('select[name^=productwarehouseid]').attr('id', 'productwarehouseid-productwarehouseid-' + length + '');
                        div.find('select[name^=productid]').attr('name', 'productid[productid-' + length + '][]');
                        div.find('select[name^=productid]').attr('id', 'productid-productid-' + length + '');
                        div.find('input').attr('name', 'quantity[quantity-' + length + ']');
                        div.find('input').attr('id', 'quantity-quantity-' + length + '');
                        div.find('input').val('');
                        div.find('input').removeAttr('disabled');
                        div.attr('id', 'demaged-' + length + '-label');
                        div.find('label').attr('for', 'quantity-quantity-' + length + '');
                        $(div).insertAfter($(e.currentTarget).parents('div.form-group'));
                        $('.chosen-select[name^="productwarehouseid[productwarehouseid-' + length + ']"]').chosen({
                            search_contains: true,
                            allow_single_deselect: true,
                            multiple: false,
                            placeholder_text_multiple: 'Magazyn',
                            max_selected_options: 1
                        });
                        $('.chosen-select[name^="productid[productid-' + length + ']"]').chosen({
                            search_contains: true,
                            allow_single_deselect: true,
                            multiple: false,
                            placeholder_text_multiple: 'dodaj',
                            max_selected_options: 1,
                            display_disabled_options: false
                        });
                        onProductChange();
                    }
                    //var selectedValue = $(this).find('option:selected').text();
                    //$('.chosen-select[multiple=multiple][name^=productid]').not('[name="' + $(this).attr('name') + '"]').parents('.form-group.inline').find('option:contains("' + selectedValue + '")').attr('disabled','disabled');
                    //$('.chosen-select[multiple=multiple][name^=productid]').not('[name="' + $(this).attr('name') + '"]').trigger("chosen:updated");
                }
            });
            setTimeout(function () {
                $('.chosen-select[multiple=multiple][name^=productid]').next('.chosen-container').on('mousedown keydown', function(event) {
                    warehouseid = $(this).parents('div.form-group').find('[name^=productwarehouseid]').val();
                    products = $('.chosen-select[multiple=multiple][name^=productid]').not('[name="' + $(this).attr('name') + '"]').map(function(i, n) {
                        return $(n).find('option:selected').val();
                    }).toArray();
                    select = $(this).parents('div.form-group').find('select[name^=productid]');
                    select.find('option').each(function(i, n) {
                        if ($(n).attr('data-warehouseid') == warehouseid && products.indexOf($(n).val()) === -1)
                            $(n).removeAttr('disabled');
                        else 
                            $(n).attr('disabled', 'disabled');
                    });
                    $(select).trigger("chosen:updated");
                });
                $('.chosen-select[name^=productwarehouseid]').on('change', function(event) {
                    if ($(this).find('option:selected').attr('data-type') == 'EQP') {
                        $(this).parents('div.form-group').find('[name^=quantity]').val('1');
                        $(this).parents('div.form-group').find('[name^=quantity]').attr('disabled', 'disabled');
                    } else {
                        $(this).parents('div.form-group').find('[name^=quantity]').removeAttr('disabled');
                        $(this).parents('div.form-group').find('[name^=quantity]').val('');
                    }
                });
            }, 1000);
        };
        $("#planneddate").datepicker({
            dateFormat: "yy-mm-dd"
        });
        $("#timefrom").timepicker({
            timeFormat: 'HH:mm',
            hourGrid: 4,
            minuteGrid: 10,
            stepMinute: 15
        });
        $("#timetill").timepicker({
            timeFormat: 'HH:mm',
            hourGrid: 4,
            minuteGrid: 10,
            stepMinute: 15
        });
<?php if ($this->request['typeid'] == $this->types->find('service', 'acronym')->id): ?>
            $("#datefinished").timepicker({
                timeFormat: 'HH:mm',
                hourGrid: 4,
                minuteGrid: 10,
                stepMinute: 5
            });
            $('#errorcodeid').parents('dd').hide().prev().hide();
            $('#solutioncodeid').on('change', function(e) {
                /*event.preventDefault();
                 event.stopPropagation();
                 var errorCodes = [];
                 $.each($(this).find('option:selected'), function(key, value) {
                 errorCodes.push($(value).attr('data-errorcodeid'));
                 })
                 $('#errorcodeid').val(errorCodes);
                 $('#errorcodeid').trigger("chosen:updated");
                 return false;*/
                $('#decoderinterchangecodeid-element').hide();
                $('#decoderinterchangecodeid-label').hide();
                $('#modeminterchangecodeid-element').hide();
                $('#modeminterchangecodeid-label').hide();
                $('[name^=demagecodeid]').first().parents('span.form-group').show();
                $('[name^=demagecodeid]').first().parents('span.form-group').prev().show();
                $('[name^=catalogid]').first().parents('span.form-group').prev().show();
                e.preventDefault();
                var errorCodes = [];
                $.each($(this).find('option:selected'), function(key, value) {
                    errorCodes.push($(value).attr('data-errorcodeid'));
                })
                $('#errorcodeid').val(errorCodes);
                $('#errorcodeid').trigger("chosen:updated");
                if ($(this).find('option:selected').attr('data-solutioncode')) {
                    var tmp = $(this).find('option:selected').attr('data-solutioncode').split('-');
                    switch (tmp[0]) {
                        // dekoder
                        case 'ST1':
                            switch (tmp[1]) {
                                case 'WKW':
                                case 'WKX':
                                    $('#modeminterchangecodeid-element').hide();
                                    $('#modeminterchangecodeid-label').hide();
                                    $('#decoderinterchangecodeid-element').show();
                                    $('#decoderinterchangecodeid-label').show();
                                    $('[name^=demagecodeid]').first().parents('span.form-group').hide();
                                    $('[name^=demagecodeid]').first().parents('span.form-group').prev().hide();
                                    $('[name^=catalogid]').first().parents('span.form-group').prev().hide();
                                    break;
                            }
                            break;
                        case 'SCI':
                            switch (tmp[1]) {
                                case 'WKW':
                                    $('#modeminterchangecodeid-element').hide();
                                    $('#modeminterchangecodeid-label').hide();
                                    $('#decoderinterchangecodeid-element').show();
                                    $('#decoderinterchangecodeid-label').show();
                                    $('[name^=demagecodeid]').first().parents('span.form-group').hide();
                                    $('[name^=demagecodeid]').first().parents('span.form-group').prev().hide();
                                    $('[name^=catalogid]').first().parents('span.form-group').prev().hide();
                                    break;
                            }
                            break;
                            // modem
                        case 'UMD':
                            switch (tmp[1]) {
                                case 'WKW':
                                case 'WKX':
                                    $('#decoderinterchangecodeid-element').hide();
                                    $('#decoderinterchangecodeid-label').hide();
                                    $('#modeminterchangecodeid-element').show();
                                    $('#modeminterchangecodeid-label').show();
                                    $('[name^=demagecodeid]').first().parents('span.form-group').hide();
                                    $('[name^=demagecodeid]').first().parents('span.form-group').prev().hide();
                                    $('[name^=catalogid]').first().parents('span.form-group').prev().hide();
                                    break;
                            }
                            break;
                        case 'WIF':
                            switch (tmp[1]) {
                                case 'WKW':
                                    $('#decoderinterchangecodeid-element').hide();
                                    $('#decoderinterchangecodeid-label').hide();
                                    $('#modeminterchangecodeid-element').show();
                                    $('#modeminterchangecodeid-label').show();
                                    $('[name^=demagecodeid]').first().parents('span.form-group').hide();
                                    $('[name^=demagecodeid]').first().parents('span.form-group').prev().hide();
                                    $('[name^=catalogid]').first().parents('span.form-group').prev().hide();
                                    break;
                            }
                            break;
                        case 'SIP':
                            switch (tmp[1]) {
                                case 'WKW':
                                    $('#decoderinterchangecodeid-element').hide();
                                    $('#decoderinterchangecodeid-label').hide();
                                    $('#modeminterchangecodeid-element').show();
                                    $('#modeminterchangecodeid-label').show();
                                    $('[name^=demagecodeid]').first().parents('span.form-group').hide();
                                    $('[name^=demagecodeid]').first().parents('span.form-group').prev().hide();
                                    $('[name^=catalogid]').first().parents('span.form-group').prev().hide();
                                    break;
                            }
                            break;
                        case 'HZ1':
                        case 'PAY':
                            switch (tmp[1]) {
                                case 'WKW':
                                case 'WKX':
                                    //if (['WCH'].indexOf('<?php echo $this->service->complaintcode; ?>') != false) {
                                    //    $('#modeminterchangecodeid-element').hide();
                                    //    $('#modeminterchangecodeid-label').hide();
                                    //} else if (['STB'].indexOf('<?php echo $this->service->complaintcode; ?>') != false) {
                                    //    $('#decoderinterchangecodeid-element').hide();
                                    //    $('#decoderinterchangecodeid-label').hide();
                                    //}
                                    $('#decoderinterchangecodeid-element').show();
                                    $('#decoderinterchangecodeid-label').show();
                                    $('#modeminterchangecodeid-element').show();
                                    $('#modeminterchangecodeid-label').show();
                                    $('[name^=demagecodeid]').first().parents('span.form-group').hide();
                                    $('[name^=demagecodeid]').first().parents('span.form-group').prev().hide();
                                    $('[name^=catalogid]').first().parents('span.form-group').prev().hide();
                                    break;
                            }
                            break;
                    }
                }
                return false;
            });
            function onModemCodeChange() {
                if ($("#modeminterchangecodeid-element").is(':visible') && $("#modeminterchangecodeid").val()) {
                    if ($("#modeminterchangecodeid").val()) {
                        $('[name^=demagecodeid]').first().val($("#modeminterchangecodeid").val()).trigger("chosen:updated");
                    } else {
                        $('[name^=demagecodeid]').first().val(0).trigger("chosen:updated");
                    }
                }
            }
            ;
            function onDecoderCodeChange() {
                if ($("#decoderinterchangecodeid-element").is(':visible') && $("#decoderinterchangecodeid").val()) {
                    if ($("#decoderinterchangecodeid").val()) {
                        $('[name^=demagecodeid]').first().val($("#decoderinterchangecodeid").val()).trigger("chosen:updated");
                    } else {
                        $('[name^=demagecodeid]').first().val(0).trigger("chosen:updated");
                    }
                }
            }
            ;
            $("#solutioncodeid,#performed,#decoderinterchangecodeid,#modeminterchangecodeid").on("change", function(e) {
                $('[name^=demagecodeid]').first().val(0).trigger("chosen:updated");
                onModemCodeChange();
                onDecoderCodeChange();
            });
            /*setTimeout(function() {
             $('[name^=demagecodeid]').each(function(index, element) {
             $(element).val($(element).find('option[selected=selected]').attr('value'));
             $(element).trigger("chosen:updated");
             });
             }, 100);*/
            //$('[name^=demagecodeid]').first().val(0).trigger("chosen:updated");
            //onModemCodeChange();
            //onDecoderCodeChange();

<?php elseif ($this->request['typeid'] == $this->types->find('installation', 'acronym')->id): ?>
            /*$("#datefinished").datetimepicker({
             dateFormat: "yy-mm-dd",
             timeFormat: 'HH:mm',
             hourGrid: 4,
             minuteGrid: 10,
             stepMinute: 5
             });*/
            $("#datefinished").datepicker({
                dateFormat: "yy-mm-dd"
            });
<?php endif; ?>

        function setPerformed() {
            var performed = $('#performed').val();

            $.each(['installationcodeid', 'installationcancelcodeid', 'cancellationcodeid', 'solutioncodeid', 'demagecodeid', 'modeminterchangecodeid', 'decoderinterchangecodeid', 'productid', 'productreturnedid', 'demaged', 'datefinished', 'quantity'], function(key, value) {
                switch (value) {
                    case 'cancellationcodeid':
                    case 'installationcancelcodeid':
                        if (performed === '0') {
                            $('[name^=' + value + ']').removeAttr('disabled').parents('dd').show();
                            $('[name^=' + value + ']').removeAttr('disabled').parents('dd').prev().show();
                        } else {
                            $('[name^=' + value + ']').attr('disabled', 'disabled').parents('dd').hide();
                            $('[name^=' + value + ']').attr('disabled', 'disabled').parents('dd').prev().hide();
                        }
                        break;
                    case 'installationcodeid':
                    case 'solutioncodeid':
                    case 'modeminterchangecodeid':
                    case 'decoderinterchangecodeid':
                        if (performed === '1') {
                            $('[name^=' + value + ']').removeAttr('disabled').parents('dd').show();
                            $('[name^=' + value + ']').removeAttr('disabled').parents('dd').prev().show();
                        } else {
                            $('[name^=' + value + ']').attr('disabled', 'disabled').parents('dd').hide();
                            $('[name^=' + value + ']').attr('disabled', 'disabled').parents('dd').prev().hide();
                        }
                        break;
                    case 'productid':
                    case 'quantity':
                    case 'productreturnedid':
                        if (performed == 1) {
                            $('[name^=' + value + ']').removeAttr('disabled').parents('div.form-group').show();
                            //$('[name^=' + value + ']').removeAttr('disabled').parents('div.form-group').prev().show();
                            $('#return-label').show();
                            $('#product-label').show();
                        } else {
                            $('[name^=' + value + ']').attr('disabled', 'disabled').parents('div.form-group').hide();
                            //$('[name^=' + value + ']').attr('disabled','disabled').parents('div.form-group').prev().hide();
                            $('#return-label').hide();
                            $('#product-label').hide();
                        }
                        break;
                    case 'demaged':
                    case 'demagecodeid':
                        if (performed == 1) {
                            $('[name^=' + value + ']').removeAttr('disabled').parents('dd').show();
                            $('[name^=' + value + ']').removeAttr('disabled').parents('dd').prev().show();
                        } else {
                            $('[name^=' + value + ']').attr('disabled', 'disabled').parents('dd').hide();
                            $('[name^=' + value + ']').attr('disabled', 'disabled').parents('dd').prev().hide();
                        }
                        break;
                    case 'datefinished':
                        if (performed !== '') {
                            $('[name^=' + value + ']').removeAttr('disabled').parents('dd').show();
                            $('[name^=' + value + ']').removeAttr('disabled').parents('dd').prev().show();
                        } else {
                            $('[name^=' + value + ']').attr('disabled', 'disabled').parents('dd').hide();
                            $('[name^=' + value + ']').attr('disabled', 'disabled').parents('dd').prev().hide();
                        }
                    case 'catalogid':
                        if (performed !== '') {
                            $('[name^=' + value + ']').removeAttr('disabled').parents('dd').show();
                        } else {
                            $('[name^=' + value + ']').attr('disabled', 'disabled').parents('dd').hide();
                        }
                }
            });
        }
        ;

        $('#performed').on('change', function() {
            setPerformed();
        });
        setPerformed();
        $('#solutioncodeid').trigger('change');
    });
</script>